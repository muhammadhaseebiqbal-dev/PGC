/**
 * Logger Utility
 * Centralized logging with environment-aware output
 */

class Logger {
  constructor() {
    this.isDevelopment = process.env.NODE_ENV === 'development';
    this.isProduction = process.env.NODE_ENV === 'production';
  }

  // Development-only logging
  dev(...args) {
    if (this.isDevelopment) {
      console.log('üîß [DEV]', ...args);
    }
  }

  // Information logging
  info(...args) {
    console.log('‚ÑπÔ∏è [INFO]', ...args);
  }

  // Warning logging
  warn(...args) {
    console.warn('‚ö†Ô∏è [WARN]', ...args);
  }

  // Error logging
  error(...args) {
    console.error('‚ùå [ERROR]', ...args);
  }

  // Success logging
  success(...args) {
    console.log('‚úÖ [SUCCESS]', ...args);
  }

  // Database logging
  db(...args) {
    if (this.isDevelopment) {
      console.log('üì¶ [DB]', ...args);
    }
  }

  // API logging
  api(...args) {
    if (this.isDevelopment) {
      console.log('üåê [API]', ...args);
    }
  }

  // Authentication logging
  auth(...args) {
    if (this.isDevelopment) {
      console.log('üîê [AUTH]', ...args);
    }
  }
}

module.exports = new Logger();
